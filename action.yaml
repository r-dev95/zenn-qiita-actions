name: sync-zenn-qiita
description: |
  Sync content between Zenn and Qiita.
  You can convert between Zenn format and Qiita format markdown.
  Push the converted markdown file to target repository.

inputs:
  zenn-repo-name:
    description: The name of your Zenn repository.
    required: true
  qiita-repo-name:
    description: The name of your Qiita repository.
    required: true
  push-to-repo-name:
    description: The name of the repository you want to push to. (<inputs.zenn-repo-name> or <inputs.qiita-repo-name>)
    required: true
  commit-msg:
    description: this is the commit message to <inputs.push-to-repo-name>.
    required: true
  git-token:
    description: The git token for pushing to <inputs.push-to-repo-name>.
    required: true
  config-path:
    description: The config path for the Converter.
    required: false
    default: "dist/sync-config.json"

runs:
  using: composite
  steps:
    - name: Setup env variables
      run: |
        echo "ACTIONS_REPO_NAME=sync-zenn-qiita" >> $GITHUB_ENV
        echo "DIFF_FPATH=../diff.txt" >> $GITHUB_ENV
        echo "CONVERTER_FPATH=sync-zenn-qiita/dist/index.js" >> $GITHUB_ENV
        echo "ZENN_CONTENT_PATH=${{ inputs.zenn-repo-name }}/articles" >> $GITHUB_ENV
        echo "QIITA_CONTENT_PATH=${{ inputs.qiita-repo-name }}/public" >> $GITHUB_ENV
        echo "TO_QIITA=${{ inputs.push-to-repo-name == inputs.qiita-repo-name }}" >> $GITHUB_ENV
        echo "GIT_ADD_IMAGE_PATH=image" >> $GITHUB_ENV
        if [ ${{ inputs.push-to-repo-name == inputs.qiita-repo-name }} ]; then
          echo "GREP_COND=^A\?M\?D\?[[:space:]]*articles/.*\.md$" >> $GITHUB_ENV
          echo "GIT_ADD_CONTENT_PATH=public" >> $GITHUB_ENV
        elif [ ${{ inputs.push-to-repo-name == inputs.zenn-repo-name }} ]; then
          echo "GREP_COND=^A\?M\?D\?[[:space:]]*public/.*\.md$" >> $GITHUB_ENV
          echo "GIT_ADD_CONTENT_PATH=articles" >> $GITHUB_ENV
        else
          echo "❌ [Failure] - Ivalid inputs 'push-to-repo-name'. (must be the same as 'zenn-repo-name' or 'qiita-repo-name')"
          exit 1
        fi
      shell: bash

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Checkout repository for sync-zenn-qiita
      uses: actions/checkout@v4
      with:
        repository: r-dev95/${{ env.ACTIONS_REPO_NAME }}
        path: ${{ env.ACTIONS_REPO_NAME }}
        ref: ${{ github.ref }}

    - name: Install dependencies
      run: |
        cd ${{ env.ACTIONS_REPO_NAME }}
        npm ci
      shell: bash

    - name: Diff files
      run: |
        if [ ${{ env.TO_QIITA }} ]; then
          cd ${{ inputs.zenn-repo-name }}
        else
          cd ${{ inputs.qiita-repo-name }}
        fi
        git diff --name-status ${{ github.event.before }} ${{ github.sha }} | grep "${{ env.GREP_COND }}" > ${{ env.DIFF_FPATH }}

        if [[ -f ${{ env.DIFF_FPATH }} ]]; then
          echo "--------------------------------------------------"
          echo "✅ [Success] - git diff"
          cat ${{ env.DIFF_FPATH }}
          echo "--------------------------------------------------"
        else
          echo "⚠️ [Warning] - No files have been updated."
        fi
      shell: bash

    - name: Run converter
      if: success()
      run: |
        node ${{ env.CONVERTER_FPATH }} ${{ env.TO_QIITA }} ${{ env.ZENN_CONTENT_PATH }} ${{ env.QIITA_CONTENT_PATH }} ${{ inputs.config-path }}

        if [[ -f ${{ env.DIFF_FPATH }} ]]; then
          rm ${{ env.DIFF_FPATH }}
        fi
      shell: bash

    - name: Commit and push to repository
      if: success()
      run: |
        cd ${{ inputs.push-to-repo-name }}
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com
        git add -v ${{ env.GIT_ADD_CONTENT_PATH }}
        git add -v ${{ env.GIT_ADD_IMAGE_PATH }}
        git commit -m "${{ inputs.commit-msg }}" || echo "Nothing to commit"
        git remote set-url origin https://x-access-token:${{ inputs.git-token }}@github.com/${{ github.repository_owner }}/${{ inputs.push-to-repo-name }}.git
        git push origin HEAD

        echo "✅ [Success] - git commit and push"
      shell: bash
