name: sync-zenn-qiita
description: |
  Sync content between Zenn and Qiita.
  You can convert between Zenn format and Qiita format markdown.
  Push the converted markdown file to target repository.

inputs:
  zenn-repo-name:
    description: The name of your Zenn repository.
    required: true
  qiita-repo-name:
    description: The name of your Qiita repository.
    required: true
  push-to-repo-name:
    description: The name of the repository you want to push to. (<inputs.zenn-repo-name> or <inputs.qiita-repo-name>)
    required: true
  commit-msg:
    description: this is the commit message to <inputs.push-to-repo-name>.
    required: true
  git-token:
    description: The git token for pushing to <inputs.push-to-repo-name>.
    required: true

  config-path:
    description: The config path for the Converter.
    required: false
    default: "dist/syncConfig.json"
  zenn-contents-path:
    description: This is your Zenn content path.
    required: false
    default: "articles"
  qiita-contents-path:
    description: This is your Qiita content path.
    required: false
    default: "public"

runs:
  using: composite
  steps:
    - name: Setup env variables
      run: |
        echo "ACTIONS_REPO_NAME=zenn-qiita-actions" >> $GITHUB_ENV
        echo "TO_ZENN=${{ inputs.push-to-repo-name == inputs.zenn-repo-name }}" >> $GITHUB_ENV
        echo "TO_QIITA=${{ inputs.push-to-repo-name == inputs.qiita-repo-name }}" >> $GITHUB_ENV
        echo "GREP_COND_ZENN=^A\?M\?D\?[[:space:]]*${{ inputs.zenn-contents-path }}/.*\.md$" >> $GITHUB_ENV
        echo "GREP_COND_QIITA=^A\?M\?D\?[[:space:]]*${{ inputs.qiita-contents-path }}/.*\.md$" >> $GITHUB_ENV
        echo "DIFF_FPATH=../diff.txt" >> $GITHUB_ENV
        echo "CONVERTER_FPATH=$ACTIONS_REPO_NAME/dist/index.js" >> $GITHUB_ENV
        echo "ZENN_CONTENT_PATH=${{ inputs.zenn-repo-name/inputs.zenn-contents-path }}" >> $GITHUB_ENV
        echo "QIITA_CONTENT_PATH=${{ inputs.qiita-repo-name/inputs.qiita-contents-path }}" >> $GITHUB_ENV

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Checkout repository for zenn-qiita-actions
      uses: actions/checkout@v4
      with:
        repository: r-dev95/$ACTIONS_REPO_NAME
        path: $ACTIONS_REPO_NAME
        ref: ${{ github.ref }}

    - name: Install dependencies
      run: |
        cd $ACTIONS_REPO_NAME
        npm ci
      shell: bash

    - name: Diff files
      run: |
        if [ $TO_QIITA ]; then
          cd ${{ inputs.zenn-repo-name }}
          git diff --name-status ${{ github.event.before }} ${{ github.sha }} | grep $GREP_COND_ZENN > $DIFF_FPATH
        elif [ $TO_ZENN ]; then
          cd ${{ inputs.qiita-repo-name }}
          git diff --name-status ${{ github.event.before }} ${{ github.sha }} | grep $GREP_COND_QIITA > $DIFF_FPATH
        else
          echo "❌ [Failure] - Ivalid inputs 'push-to-repo-name'. (must be the same as 'zenn-repo-name' or 'qiita-repo-name')"
          exit 1
        fi

        echo "--------------------------------------------------"
        echo "✅ [Success] - git diff"
        cat $DIFF_FPATH
        echo "--------------------------------------------------"
      shell: bash

    - name: Run converter
      if: success()
      run: |
        if [ $TO_QIITA ]; then
          node $CONVERTER_FPATH 0 $ZENN_CONTENT_PATH $QIITA_CONTENT_PATH ${{ inputs.config-path }}
        else
          node $CONVERTER_FPATH 1 $QIITA_CONTENT_PATH $ZENN_CONTENT_PATH ${{ inputs.config-path }}
        fi

        if [[ -f $DIFF_FPATH ]]; then
          rm $DIFF_FPATH
        fi
      shell: bash

    - name: Commit and push to repository
      if: success()
      run: |
        cd ${{ inputs.push-to-repo-name }}
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com
        if [ $TO_QIITA ]; then
          git add public/
        else
          git add articles/
        fi
        git commit -m "${{ inputs.commit-msg }}" || echo "Nothing to commit"
        git remote set-url origin https://x-access-token:${{ inputs.git-token }}@github.com/${{ github.repository_owner }}/${{ inputs.push-to-repo-name }}.git
        git push origin HEAD

        echo "✅ [Success] - git commit and push"
      shell: bash
